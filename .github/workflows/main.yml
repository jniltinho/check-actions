name: "CI"

on:
  push:
    branches:
      - main
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  commit_message: ${{github.event.head_commit.message}}
  AUTHOR: '${{github.event.pusher.name}}\<${{github.event.pusher.email}}\>'
  AUTHOR_URL: 'https://github.com/${{github.event.pusher.name}}'


jobs:
  deploy-backend-dev:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jniltinho/rust-cross-mac:latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Vars
        run: |
           echo "MESSAGE=$(echo '${{github.event.head_commit.message}}'|head -n 1)" >> $GITHUB_ENV
           echo "repo_name=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
           echo "current_date=$(TZ=':America/Sao_Paulo' date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
           echo "app_version=${GITHUB_REPOSITORY#*/}-$(TZ=':America/Sao_Paulo' date +'%Y%m%d-%H%M')" >> $GITHUB_ENV
           echo "release_from=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Install Tools
        run: cargo install cargo-get; make install-upx

      - name: Compile Rust App
        run: make build; make build-win; make run-upx; make create-tar

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
           tag_name: ${{env.app_version}}
           release_name: Release ${{env.app_version}}
           body: |
               Changes in this Release
               - Release from: ${{env.release_from}}
               - Data do Release: ${{env.current_date}}
               - Github Author: ${{env.AUTHOR_URL}}
               - Commit: ${{github.sha}}
               - Commit Message: ${{env.MESSAGE}}
           draft: false
           prerelease: false

      - name: Upload Bin Linux 64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ${{env.repo_name}}-linux64.tar.gz
          asset_name: ${{env.repo_name}}-linux64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Bin Windows 64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ${{env.repo_name}}-win64.tar.gz
          asset_name: ${{env.repo_name}}-win64.tar.gz
          asset_content_type: application/gzip



